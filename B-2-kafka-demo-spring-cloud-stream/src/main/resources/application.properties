server.port=8181

spring.kafka.bootstrap-servers=localhost:29092

# Tady se zapojuji jednotlive beany
spring.cloud.stream.function.definition=orderBuySupplier;ordersConsumer

# Konfigurace bean (producer, consumer, stream)

spring.cloud.stream.bindings.orderBuySupplier-out-0.destination=orders.buy
spring.cloud.stream.kafka.bindings.orderBuySupplier-out-0.producer.configuration.key.serializer=org.apache.kafka.common.serialization.StringSerializer


spring.cloud.stream.bindings.ordersConsumer-in-0.destination=orders.buy
spring.cloud.stream.bindings.ordersConsumer-in-0.group=group1


#spring.cloud.stream.kafka.bindings.ordersConsumer-in-0.consumer.configuration.key.serializer=org.apache.kafka.common.serialization.StringSerializer

#spring.kafka.bootstrap-servers=localhost:29092
#spring.kafka.producer.acks=all
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
#spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
#spring.kafka.properties.schema.registry.url=http://localhost:8081
#
## https://piotrminkowski.com/2021/07/22/spring-cloud-stream-with-schema-registry-and-kafka/
#spring.cloud.schema-registry-client.endpoint=http://localhost:8081
#spring.cloud.stream.default.contentType=application/*+avro
#spring.cloud.schema.avro.dynamicSchemaGenerationEnabled=true
#spring.main.allow-bean-definition-overriding=true
#
#spring.kafka.consumer.properties.specific.avro.reader=true
#
#spring.kafka.streams.application-id=streams-application-id-1
#
## rockdb stav se bude ukladat do adresare target
#spring.kafka.streams.state-dir=target
## timhle se pri startu smazne obsah rockdb databaze
## super pri testovani, na produkci nee!!!
#spring.kafka.streams.cleanup.on-startup=true
## To same jako predchazejici nastaveni,
## ale maze obsah rockdb databaze pri shutdownu aplikace
##spring.kafka.streams.cleanup.on-shutdown=true
#
## Pocet threadu ve kterych se budou Kafka Streams zprocesovavat
#spring.kafka.streams.properties.num.stream.threads=1
#
#server.port=8181
